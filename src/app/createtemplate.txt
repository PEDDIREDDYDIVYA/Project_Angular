import { Component } from "@angular/core";
import { SkillService } from "./skill.service";

@Component({
    selector:'app-createTemplate',
    template:`
    <form ngNativeValidate>
    <div class="form-group">
    <label for="techname">Technology Name : </label>
    <input type="text" #techname class="form-control form-control-lg" placeholder="Enter Technology Name" required  id="techname">
    </div>

    <div class="form-group">
    <label for="skillname" >Skill Name : </label>
    <input type="text" class="form-control form-control-lg" placeholder="Enter Skill Name" #skillname  id="skillname" required>
    </div>

    <div class="text-center">
    <button type="submit" data-toggle="modal" data-target="#myModal" (click)="submitData(techname.value,skillname.value)" class="btn">Submit</button>
    </div>

    </form>

    <div *ngIf="agree">
          <div class="modal fade" id="myModal" role="dialog" >
          <div class="modal-dialog">
          
            <!-- Modal content-->
            <div  *ngIf="sucess"class="modal-content">
              <div  class="modal-header">Success Card
                <button  type="button" class="close" data-dismiss="modal">&times;</button>
              </div>
              <div style="width:80%;margin:0px 40px;background-color:#6495ED " class="modal-body">
              <h1 ><i class="bi bi-check-circle"></i></h1><h3 style="color:white">Data Saved Successfully</h3>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn-secondary" data-dismiss="modal">Close</button>
              </div>
            
          </div>
      
        </div>
        </div>
        </div>




    <!------
    <div id="myModal" class="modal fade" role="dialog">
    <div *ngIf="agree">
    <div class="modal-dialog">
    <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
          </div>
          <div class="modal-body">
    
   <i class="fa fa-check fa-8x fa-align-center"></i>
   <p>Data has been saved successfully</p>
  
    </div>
    <div class="modal-footer">
    <button type="button" class="btn" data-dismiss="modal">OK</button>
    </div>
    </div>
    </div>
    </div>
    </div>
    ---->
    `,
    styles:[`
    form{
        width:50%;
        margin:auto;
    }
       i,p{
           text-align:center;
           color:white;
           width:100%;
       }
       .btn{
           margin:auto;
           background-color:dodgerblue;
           color:white;
       }
       .modal-header,.modal-body{
           background-color:#4D86EC;
       }
    @media (max-width: 544px){
        form{
            width:90%;
        }
    }
    `]
    
})

/*
export class CreateTemplateComp{
    agree=false;
    NEW=[];UPDATE=[];DELETE=[];postObj;
    constructor(private ds:SkillService){}
    submitData(techname,skillname){
        console.log(techname,skillname);
        this.NEW.push({"TEMPTECHNAME":techname,"TEMPSKILL":skillname}); 
        let finaldata={
            EVALUATION_TEMP:{
            "NEW":this.NEW,
            "UPDATE":this.UPDATE,
            "DELETE":this.DELETE
            }
    }

      this.ds.postsubmit(finaldata).subscribe(res=>{
      this.agree=true;
        this.postObj=res;
})  
    }
}

*/







import { Component } from "@angular/core";
import { SkillService } from "./skill.service";
import {Router} from '@angular/router';
@Component({
    selector:'app-createtemp',
    template:`
    <div class="container  table-responsive">
             <form class="Absolute-Center is-Responsive" ngNativeValidate>
                  <h5 class="text-center">Create New Template</h5><br>
                          <div class="form-group">
                           <label  for="Inputtext1">Technology</label>&nbsp;
                           <input type="text"  #t class="form-control" id="Inputtext1" placeholder="Enter Technology" required>
                          </div>
                        <div class="form-group">
                          <label for="Inputtext2">Skill</label>&nbsp;
                          <input type="text" #s class="form-control" id="Inputtext2" placeholder="Enter Skill" required >
                    </div>
                        <div class="form-group container text-center">
                          <button type="submit" class="btn-primary" data-toggle="modal" data-target="#myModal"  (click)="addSubmit(t.value,s.value)">SUBMIT</button>
                        </div>
              </form>
          </div>
          <div *ngIf="sucess">
          <div class="modal fade" id="myModal" role="dialog" >
          <div class="modal-dialog">
          
            <!-- Modal content-->
            <div  *ngIf="sucess" class="modal-content">
              <div  class="modal-header" [ngClass]="{ bluebox : sucess , redbox:ss}">
                <button  type="button" class="close" data-dismiss="modal">&times;</button>
              </div>
              <div [ngClass]="{ bluebox : sucess , redbox:ss}" class="modal-body text-center">
              <h1 ><i class="bi bi-check-circle"></i></h1><h3 style="color:white">Data Saved Successfully</h3>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn-secondary" data-dismiss="modal" (click)="redirect()">Close</button>
              </div>
            
          </div>
      
        </div>
        </div>
        </div>
          <div *ngIf="ss">
          <div class="modal1 fade" id="myModal1" role="dialog" >
          <div class="modal-dialog">
          
            <!-- Modal content-->
            <div  *ngIf="ss" class="modal-content">
              <div  class="modal-header" [ngClass]="{ bluebox : sucess , redbox:ss}">
                <button  type="button" class="close" data-dismiss="modal">&times;</button>
              </div>
              <div [ngClass]="{ bluebox : sucess , redbox:ss}" class="modal-body text-center">
              <h1 ><i class="bi bi-check-circle"></i></h1><h3 style="color:white">Data Saved Successfully</h3>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn-secondary" data-dismiss="modal" (click)="redirect()">Close</button>
              </div>
            
          </div>
      
        </div>
        </div>
        </div>
    <!--button (click)="goBack()">Go Back</button-->
    `,
    styles:[`
   
    
      .form-group{
        width:90%;
        margin-left: auto; 
        margin-right: auto;
    }
      div{
          border:5px lightgrey;
      }
      .card{
        margin:20px 50px;
      }
      .bluebox{
        width:100%;
        height:100%;
        margin:0px 0px 0px 0px;
        background-color:#6495ED 
      }
      .redbox{
        width:100%;
        height:100%;
        margin:0px 0px 0px 0px;
        background-color:red
      }
    `]
})
export class CreateTemplateComp{
      title="temp comp";
    adduser;
    skillobj={skill:''};
    skilllist=[];
    edituser;
    slist;
    finaldata;
    editval;
    new=[];
    update=[];
    delete=[];
    editind=0;
    addindex=0;
    delindex=0;
    sucess=false;
    ss=true;
    constructor(private router:Router,private ds:SkillService){
      document.getElementById("eval").style.color="black";
      document.getElementById("temp").style.color="green";
        this.ds.getUsers().subscribe((res)=>{
            this.slist=res;
           // console.log("requested data",typeof(this.slist.EVALUATION_TEMP));
            //console.log(this.slist.EVALUATION_TEMP);
        })
        
    }
    submitdata(val,i){}

  ngOnInit(): void {
  }
   /*  goBack(){
        this.router.navigate(['/template']);
    } */
   addSubmit(fd,s){
    this.slist.EVALUATION_TEMP.unshift({"TEMPTECHNAME":fd,"TEMPSKILL":s});
    this.new.push({"TEMPTECHNAME":fd,"TEMPSKILL":s});    
    this.finaldata={
      "EVALUATION_TEMP":{
          "NEW":this.new,
          "UPDATE":this.update,
          "DELETE":this.delete }}
  console.log(this.new);
  this.skilllist.push(fd);
  /*
  if(fd!=='' && s!=='')
    {this.sucess=true;}*/
     //this.sucess=true;
    if(fd!=='' && s!=''){
    this.sucess=true;
    this.ds.postsubmit(this.finaldata).subscribe((res)=>{
      if(res["status"]!=200){
        this.sucess=false;
        this.ss=true;
      }
    })
  }
this.skilllist.push(fd);
this.skillobj.skill="";
this.adduser=false;

}
redirect(){
  this.router.navigate(['/showalltemplates']);
}
         
         
    
}




createtemp







import { Component } from "@angular/core";
import { SkillService } from "./skill.service";
import {Router} from '@angular/router';
@Component({
    selector:'app-createtemp',
    template:`
    <div class="container  table-responsive">
             <form class="Absolute-Center is-Responsive" ngNativeValidate>
                  <h5 class="text-center">Create New Template</h5><br>
                          <div class="form-group">
                           <label  for="Inputtext1">Technology</label>&nbsp;
                           <input type="text"  #t class="form-control" id="Inputtext1" placeholder="Enter Technology" required>
                          </div>
                        <div class="form-group">
                          <label for="Inputtext2">Skill</label>&nbsp;
                          <input type="text" #s class="form-control" id="Inputtext2" placeholder="Enter Skill" required >
                    </div>
                        <div *ngIf="sucess" class="form-group container text-center">
                          <button type="submit" class="btn-primary"  (click)="addSubmit(t.value,s.value)">Add Technology</button>
                        </div>
              </form>
          </div>
          <div >
          <div class="modal fade" id="myModal" role="dialog" >
          <div class="modal-dialog">
          
            <!-- Modal content-->
            <div  class="modal-content">
              <div  class="modal-header" style="width:100%;height:100%;margin:0px 0px 0px 0px;background-color:#6495ED ">
                <button  type="button" class="close" data-dismiss="modal">&times;</button>
              </div>
              <div style="width:100%;height:100%;margin:0px 0px 0px 0px;background-color:#6495ED " class="modal-body text-center">
              <h1 ><i class="bi bi-check-circle"></i></h1><h3 style="color:white">Data Saved Successfully</h3>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn-secondary" data-dismiss="modal" (click)="redirect()">Close</button>
              </div>
            
          </div>
      
        </div>
        </div>
        </div>
          <div >
          <div class="modal1 fade" id="myModal1" role="dialog" >
          <div class="modal-dialog">
          
            <!-- Modal content-->
            <div  class="modal-content">
              <div  class="modal-header" style="width:100%;height:100%;margin:0px 0px 0px 0px;background-color:#6495ED ">
                <button  type="button" class="close" data-dismiss="modal">&times;</button>
              </div>
              <div style="width:100%;height:100%;margin:0px 0px 0px 0px;background-color:red " class="modal-body text-center">
              <h1 ><i class="bi bi-check-circle"></i></h1><h3 style="color:white">Something went wrong</h3>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn-secondary" data-dismiss="modal" (click)="redirect()">Close</button>
              </div>
            
          </div>
      
        </div>
        </div>
        </div>
    <!--button (click)="goBack()">Go Back</button-->
    `,
    styles:[`
   
    
      .form-group{
        width:90%;
        margin-left: auto; 
        margin-right: auto;
    }
      div{
          border:5px lightgrey;
      }
      .card{
        margin:20px 50px;
      }
    `]
})
export class CreateTemplateComp{
      title="temp comp";
    adduser;
    skillobj={skill:''};
    skilllist=[];
    edituser;
    slist;
    finaldata;
    editval;
    new=[];
    update=[];
    delete=[];
    editind=0;
    addindex=0;
    delindex=0;
    sucess=false;
    ss=true;
    constructor(private router:Router,private ds:SkillService){
      document.getElementById("eval").style.color="black";
      document.getElementById("temp").style.color="green";
        this.ds.getUsers().subscribe((res)=>{
            this.slist=res;
           // console.log("requested data",typeof(this.slist.EVALUATION_TEMP));
            //console.log(this.slist.EVALUATION_TEMP);
        })
        
    }
    submitdata(val,i){}

  ngOnInit(): void {
  }
   /*  goBack(){
        this.router.navigate(['/template']);
    } */
   addSubmit(fd,s){
    this.slist.EVALUATION_TEMP.unshift({"TEMPTECHNAME":fd,"TEMPSKILL":s});
    this.new.push({"TEMPTECHNAME":fd,"TEMPSKILL":s});    
    this.finaldata={
      "EVALUATION_TEMP":{
          "NEW":this.new,
          "UPDATE":this.update,
          "DELETE":this.delete }}
  console.log(this.new);
  this.skilllist.push(fd);
  /*
  if(fd!=='' && s!=='')
    {this.sucess=true;}*/
     //this.sucess=true;
    if(fd!=='' && s!=''){
    this.sucess=true;
    this.ds.postsubmit(this.finaldata).subscribe((res)=>{
      if(res["status"]==200){
        this.sucess=true;
        ($('#myModal') as any).modal('show');
      }
    },(error)=>{
      ($('#myModal1') as any).modal('show');
    })
  }
  else{
    this.ss=true;
  }
this.skilllist.push(fd);
this.skillobj.skill="";
this.adduser=false;

}
redirect(){
  this.router.navigate(['/showalltemplates']);
}
         
         
    
}